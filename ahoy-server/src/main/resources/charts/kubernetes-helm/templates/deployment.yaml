{{- define "deployment.app" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    manager: ahoy
    app: {{ .app.name }}
    releaseName: {{ .glob.releaseName }}
    environment: {{ .glob.environment }}
  name: {{ .glob.releaseName }}-{{ .app.name }}
spec:
  replicas: {{ .app.replicas }}
  selector:
    matchLabels:
      manager: ahoy
      app: {{ .app.name }}
      releaseName: {{ .glob.releaseName }}
      environment: {{ .glob.environment }}
  template:
    metadata:
      {{ if .app.configFileHashes}}
      annotations:
        ahoy.lsdopen.io/configFileHashes: |
          {{ .app.configFileHashes }}
      {{ end }}
      labels:
        manager: ahoy
        app: {{ .app.name }}
        releaseName: {{ .glob.releaseName }}
        environment: {{ .glob.environment }}
    spec:
      {{ if .app.dockerConfigJson }}
      imagePullSecrets:
        - name: {{ .glob.releaseName }}-{{ .app.name }}
      {{ end }}
      containers:
        - image: {{ .app.image }}
          imagePullPolicy: Always
          name: {{ .glob.releaseName }}-{{ .app.name }}
          {{ if .app.commandArgsEnabled }}
          {{ if .app.command }}
          command:
            - {{ .app.command }}
          {{ end }}
          {{ if .app.args }}
          args:
            {{- range .app.args }}
            - {{ . }}
            {{- end}}
          {{ end }}
          {{ end }}
          {{ if .app.environmentVariables }}
          env:
            {{- range $name, $envVariable := .app.environmentVariables }}
            {{ if eq $envVariable.type "Value"}}
            - name: {{ $name }}
              value: '{{ $envVariable.value }}'
            {{ end }}
            {{ if eq $envVariable.type "Secret"}}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.glob.releaseName }}-{{ $.app.name }}-{{ $envVariable.secretName }}
                  key: {{ $envVariable.secretKey }}
            {{ end }}
            {{- end }}
          {{ end }}
          {{ if .app.servicePorts }}
          ports:
            {{- range .app.servicePorts }}
            - containerPort: {{ . }}
              protocol: TCP
            {{- end }}
          {{ end }}
          {{ if .app.healthChecksEnabled }}
          livenessProbe:
            httpGet:
              path: {{ .app.healthEndpointPath }}
              port: {{ .app.healthEndpointPort }}
              scheme: {{ .app.healthEndpointScheme }}
            {{ if .app.livenessProbe }}
            {{- toYaml .app.livenessProbe | nindent 12 }}
            {{ end }}
          readinessProbe:
            httpGet:
              path: {{ .app.healthEndpointPath }}
              port: {{ .app.healthEndpointPort }}
              scheme: {{ .app.healthEndpointScheme }}
            {{ if .app.readinessProbe }}
            {{- toYaml .app.readinessProbe | nindent 12 }}
            {{ end }}
          {{ end }}
          {{ if .app.resources }}
          resources:
            {{- toYaml .app.resources | nindent 12 }}
          {{ else }}
          resources: {}
          {{ end }}
          {{ if or .app.configFiles .app.volumes }}
          volumeMounts:
            {{ if and .app.configPath .app.configFiles}}
            - name: application-config
              mountPath: {{ .app.configPath }}
            {{ end }}
            {{- range $name, $volume := .app.volumes }}
            - name: {{ $volume.name }}
              mountPath: {{ $volume.mountPath }}
            {{- end }}
          {{ end }}
      {{ if or .app.configFiles .app.volumes}}
      volumes:
        {{ if .app.configFiles}}
        - name: application-config
          configMap:
            name: {{ .glob.releaseName }}-{{ .app.name }}
        {{ end }}
        {{- range $name, $volume := .app.volumes }}
        - name: {{ $volume.name }}
          {{ if eq $volume.type "PersistentVolume"}}
          persistentVolumeClaim:
            claimName: {{ $.glob.releaseName }}-{{ $.app.name }}-{{ $volume.name }}
          {{ end }}
          {{ if eq $volume.type "Secret"}}
          secret:
            secretName: {{ $.glob.releaseName }}-{{ $.app.name }}-{{ $volume.secretName }}
          {{ end }}
        {{- end}}
      {{ end }}
  {{- end -}}
