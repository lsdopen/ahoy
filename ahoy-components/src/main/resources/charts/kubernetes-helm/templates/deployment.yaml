{{- define "deployment.app" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    manager: ahoy
    app: {{ .app.name }}
    releaseName: {{ .glob.releaseName }}
    environment: {{ .glob.environment }}
  name: {{ .app.name }}
spec:
  replicas: {{ .app.replicas }}
  selector:
    matchLabels:
      manager: ahoy
      app: {{ .app.name }}
      releaseName: {{ .glob.releaseName }}
      environment: {{ .glob.environment }}
  template:
    metadata:
      {{- if .app.configFileHashes}}
      annotations:
        ahoy.lsdopen.io/configFileHashes: |
          {{ .app.configFileHashes }}
      {{- end }}
      labels:
        manager: ahoy
        app: {{ .app.name }}
        releaseName: {{ .glob.releaseName }}
        environment: {{ .glob.environment }}
    spec:
      {{- if .app.dockerConfigJson }}
      imagePullSecrets:
        - name: {{ .app.name }}
      {{- end }}
      initContainers:
        {{- range $containerName, $container := .app.initContainers }}
        - image: {{ $container.image }}
          imagePullPolicy: Always
          name: {{ $containerName }}
          {{- if $container.commandArgsEnabled }}
          {{- if $container.command }}
          command:
            - {{ $container.command }}
          {{- end }}
          {{- if $container.args }}
          args:
            {{- range $container.args }}
            - {{ . }}
            {{- end}}
          {{- end }}
          {{- end }}
          {{- if and $container.environmentVariablesEnabled $container.environmentVariables }}
          env:
            {{- range $name, $envVariable := $container.environmentVariables }}
            {{- if eq $envVariable.type "Value"}}
            - name: {{ $name }}
              value: '{{ $envVariable.value }}'
            {{- end }}
            {{- if eq $envVariable.type "Secret"}}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.app.name }}-{{ $envVariable.secretName }}
                  key: {{ $envVariable.secretKey }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if and $container.servicePortsEnabled $container.servicePorts }}
          ports:
            {{- range $container.servicePorts }}
            - containerPort: {{ . }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- if and $container.resourcesEnabled $container.resources }}
          resources:
            {{- toYaml $container.resources | nindent 12 }}
          {{- else }}
          resources: {}
          {{- end }}
          {{- if or $.app.configFiles $.app.volumes }}
          volumeMounts:
            {{- if and $.app.configFilesEnabled $.app.configPath $.app.configFiles}}
            - name: application-config
              mountPath: {{ $.app.configPath }}
            {{- end }}
            {{- if $.app.volumesEnabled }}
            {{- range $name, $volume := $.app.volumes }}
            - name: {{ $volume.name }}
              mountPath: {{ $volume.mountPath }}
            {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
      containers:
        {{- range $containerName, $container := .app.containers }}
        - image: {{ $container.image }}
          imagePullPolicy: Always
          name: {{ $containerName }}
          {{- if $container.commandArgsEnabled }}
          {{- if $container.command }}
          command:
            - {{ $container.command }}
          {{- end }}
          {{- if $container.args }}
          args:
            {{- range $container.args }}
            - {{ . }}
            {{- end}}
          {{- end }}
          {{- end }}
          {{- if and $container.environmentVariablesEnabled $container.environmentVariables }}
          env:
            {{- range $name, $envVariable := $container.environmentVariables }}
            {{- if eq $envVariable.type "Value"}}
            - name: {{ $name }}
              value: '{{ $envVariable.value }}'
            {{- end }}
            {{- if eq $envVariable.type "Secret"}}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.app.name }}-{{ $envVariable.secretName }}
                  key: {{ $envVariable.secretKey }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if and $container.servicePortsEnabled $container.servicePorts }}
          ports:
            {{- range $container.servicePorts }}
            - containerPort: {{ . }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- if $container.healthChecksEnabled }}
          livenessProbe:
            {{- if $container.livenessProbe }}
            {{- toYaml $container.livenessProbe | nindent 12 }}
            {{- end }}
          readinessProbe:
            {{- if $container.readinessProbe }}
            {{- toYaml $container.readinessProbe | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if and $container.resourcesEnabled $container.resources }}
          resources:
            {{- toYaml $container.resources | nindent 12 }}
          {{- else }}
          resources: {}
          {{- end }}
          {{- if or $.app.configFiles $.app.volumes }}
          volumeMounts:
            {{- if and $.app.configFilesEnabled $.app.configPath $.app.configFiles}}
            - name: application-config
              mountPath: {{ $.app.configPath }}
            {{- end }}
            {{- if $.app.volumesEnabled }}
            {{- range $name, $volume := $.app.volumes }}
            - name: {{ $volume.name }}
              mountPath: {{ $volume.mountPath }}
            {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- if or .app.configFiles .app.volumes}}
      volumes:
        {{- if and .app.configFilesEnabled .app.configFiles}}
        - name: application-config
          configMap:
            name: {{ .app.name }}
        {{- end }}
        {{- if .app.volumesEnabled }}
        {{- range $name, $volume := .app.volumes }}
        - name: {{ $volume.name }}
          {{- if eq $volume.type "PersistentVolume"}}
          persistentVolumeClaim:
            claimName: {{ $.app.name }}-{{ $volume.name }}
          {{- end }}
          {{- if eq $volume.type "Secret"}}
          secret:
            secretName: {{ $.app.name }}-{{ $volume.secretName }}
          {{- end }}
          {{- if eq $volume.type "EmptyDir"}}
          emptyDir:
            sizeLimit: {{ $volume.size }}
          {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
  {{- end -}}
