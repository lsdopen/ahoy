/*!
 * Copyright  2021 LSD Information Technology (Pty) Ltd
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

.p-autocomplete {
    .p-autocomplete-multiple-container {
        &:not(.p-disabled).p-focus {
            box-shadow: inset 0 0 0 1px $inputFocusBorderColor,inset 0 0 0 1px $inputFocusBorderColor,inset 0 0 0 1px $inputFocusBorderColor,inset 0 0 0 1px $inputFocusBorderColor;
        }
    }
}

.p-input-filled {
    .p-autocomplete {
        .p-autocomplete-multiple-container {
            @include filled-input-wrapper();
        }
    }
}

.p-float-label {
    .p-autocomplete-multiple-container {
        .p-autocomplete-token {
            padding: .25rem 1rem;
        }
    }
}

.p-input-filled {
    .p-float-label {
        .p-autocomplete {
            .p-autocomplete-multiple-container {
                .p-autocomplete-token {
                    padding-top: 0;
                    padding-bottom: 0;

                    .p-autocomplete-token-icon {
                        font-size: 75%;
                    }
                }

                .p-autocomplete-input-token {
                    padding: 0;
                }
            }
        }
    }

    p-autocomplete.ng-dirty.ng-invalid {
        .p-autocomplete > .p-inputtext {
            @include invalid-filled-input();
        }

        .p-autocomplete .p-autocomplete-multiple-container {
            @include invalid-filled-input-wrapper();
        }
    }
}

p-autocomplete.ng-dirty.ng-invalid {
    .p-autocomplete > .p-inputtext {
        &:enabled:focus {
            box-shadow: inset 0 0 0 1px $inputErrorBorderColor,inset 0 0 0 1px $inputErrorBorderColor,inset 0 0 0 1px $inputErrorBorderColor,inset 0 0 0 1px $inputErrorBorderColor;
        }
    }

    .p-autocomplete .p-autocomplete-multiple-container {
        &:not(.p-disabled).p-focus {
            box-shadow: inset 0 0 0 1px $inputErrorBorderColor,inset 0 0 0 1px $inputErrorBorderColor,inset 0 0 0 1px $inputErrorBorderColor,inset 0 0 0 1px $inputErrorBorderColor;
        }
    }
}
